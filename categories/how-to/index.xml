<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How-To on 做一个善于思考的学习者</title>
    <link>https://idevz.org/categories/how-to/</link>
    <description>Recent content in How-To on 做一个善于思考的学习者</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>© 2020 idevz.org</copyright>
    <lastBuildDate>Thu, 27 Jul 2017 19:55:52 +0800</lastBuildDate>
    
	<atom:link href="https://idevz.org/categories/how-to/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CentOS 如何打 RPM 包</title>
      <link>https://idevz.org/2017/07/centos-%E5%A6%82%E4%BD%95%E6%89%93-rpm-%E5%8C%85/</link>
      <pubDate>Thu, 27 Jul 2017 19:55:52 +0800</pubDate>
      
      <guid>https://idevz.org/2017/07/centos-%E5%A6%82%E4%BD%95%E6%89%93-rpm-%E5%8C%85/</guid>
      <description>打包前的准备 安装相关打包工具  sudo yum install rpmdevtools rpmlint rpmbuild --version
❯ rpmbuild --version z@z RPM 版本 4.11.3  新建用户 RPM 在打包的过程中会将文件临时安装到系统中，为了保证构建程序不破坏系统环境，要使用普通用户打包：
sudo useradd rpmuser sudo passwd rpmuser su - rpmuser 初始化打包环境 rpmdev-setuptree是rpmdevtools中带的初始化环境脚本，执行后会在用户主目录下创建rpmbuild目录和.rpmmacros文件，同时生成所需的子目录和默认的控制参数，执行：
rpmdev-setuptree 生成的目录结构:
`-- rpmbuild |-- BUILD |-- RPMS |-- SOURCES |-- SPECS `-- SRPMS 默认的全局控制宏文件.rpmmacros内容：
%_topdir %(echo $HOME)/rpmbuild %_smp_mflags %( \  [ -z &amp;#34;$RPM_BUILD_NCPUS&amp;#34; ] \\\  &amp;amp;&amp;amp; RPM_BUILD_NCPUS=&amp;#34;`/usr/bin/nproc 2&amp;gt;/dev/null || \\\ /usr/bin/getconf _NPROCESSORS_ONLN`&amp;#34;; \\\  if [ &amp;#34;$RPM_BUILD_NCPUS&amp;#34; -gt 16 ]; then \\\  echo &amp;#34;-j16&amp;#34;; \\\  elif [ &amp;#34;$RPM_BUILD_NCPUS&amp;#34; -gt 3 ]; then \\\  echo &amp;#34;-j$RPM_BUILD_NCPUS&amp;#34;; \\\  else \\\  echo &amp;#34;-j3&amp;#34;; \\\  fi ) %__arch_install_post \  [ &amp;#34;%{buildarch}&amp;#34; = &amp;#34;noarch&amp;#34; ] || QA_CHECK_RPATHS=1 ; \  case &amp;#34;${QA_CHECK_RPATHS:-}&amp;#34; in [1yY]*) /usr/lib/rpm/check-rpaths ;; esac \  /usr/lib/rpm/check-buildroot 安装编译软件 制作rpm包要先编译在打二进制包，所以要装 gcc、make 等工具，如果是给 Golang 的项目打 RPM 包，还需要有 go 环境</description>
    </item>
    
  </channel>
</rss>