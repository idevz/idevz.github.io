<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>微服务 on 做一个善于思考的学习者</title>
    <link>https://idevz.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
    <description>Recent content in 微服务 on 做一个善于思考的学习者</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>© 2020 idevz.org</copyright>
    <lastBuildDate>Tue, 13 Nov 2018 22:11:56 +0800</lastBuildDate>
    
	<atom:link href="https://idevz.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Service mesh — 一种新的模式而不是新技术</title>
      <link>https://idevz.github.io/2018/11/service-mesh-%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%A8%A1%E5%BC%8F%E8%80%8C%E4%B8%8D%E6%98%AF%E6%96%B0%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Tue, 13 Nov 2018 22:11:56 +0800</pubDate>
      
      <guid>https://idevz.github.io/2018/11/service-mesh-%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%A8%A1%E5%BC%8F%E8%80%8C%E4%B8%8D%E6%98%AF%E6%96%B0%E6%8A%80%E6%9C%AF/</guid>
      <description>原著信息： Service Mesh – A New Pattern, Not A New Technology?
by:Marco Palladino
What is Service Mesh and Where Did it Come From? Over the past few months, you may have noticed the explosion of industry chatter and articles surrounding service mesh and the future of software architecture. These discussions have been highly polarizing, with tribes forming around specific vendors. While this partisan trend is to be expected, the common thread among these discussions is the rapid transformation of how APIs are used in the enterprise, and what this means for the topology of our traffic.</description>
    </item>
    
    <item>
      <title>微服务架构的 What，Why，和 How</title>
      <link>https://idevz.github.io/2018/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84-whatwhy%E5%92%8C-how/</link>
      <pubDate>Tue, 18 Sep 2018 22:11:56 +0800</pubDate>
      
      <guid>https://idevz.github.io/2018/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84-whatwhy%E5%92%8C-how/</guid>
      <description>原著信息： The What, Why, and How of a Microservices Architecture
by:Jetinder Singh
For many years now we have been building systems and getting better at it. Several technologies, architectural patterns, and best practices have emerged over those years. Microservices is one of those architectural patterns which has emerged from the world of domain-driven design, continuous delivery, platform and infrastructure automation, scalable systems, polyglot programming and persistence.
多年来我们构建系统并且做到越来越好。这些年出现了一些技术、架构模式和最佳实践。微服务是从领域驱动设计，持续交付，平台和基础设施自动化，可扩展系统，多语言编程和持久性领域的架构模式之一。
What is a Microservices Architecture in a Nutshell?</description>
    </item>
    
    <item>
      <title>微服务的服务网格</title>
      <link>https://idevz.github.io/2017/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/</link>
      <pubDate>Mon, 18 Sep 2017 22:11:56 +0800</pubDate>
      
      <guid>https://idevz.github.io/2017/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC/</guid>
      <description>原著信息： Service Mesh for Microservices
by:Kasun Indrasiri
Microservices architecture has been evolving a lot during the last couple of years and there are quite a few new concepts and patterns are emerging. ‘Service Mesh’ concept is getting quite popular. In this post, I’m planning to cover the key concepts related to Service Mesh and how it is used in real-world microservices implementations.
微服务架构在过去几年中发展很多，出现了相当多的新的概念和模式。“Service Mesh” 的概念越来越受欢迎。本文，我计划涵盖 Service Mesh 的关键概念以及如何在实际的微服务实现中使用。
Why ‘Service Mesh’?</description>
    </item>
    
    <item>
      <title>微服务分层架构</title>
      <link>https://idevz.github.io/2017/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Sat, 16 Sep 2017 22:11:56 +0800</pubDate>
      
      <guid>https://idevz.github.io/2017/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84/</guid>
      <description>原著信息： Microservices Layered Architecture
by:Kasun Indrasiri
With Microservices architecture, a single software application/functionality is implemented as a combination of multiple microservices and their interactions. Hence the communications between services and their coordination are vital for a successful realization of microservices architecture.
在微服务架构中，单个软件应用 / 功能被实现为多个微服务及其交互的组合。因此服务间的通信及他们的协调对于成功实现微服务架构至关重要。
It is important to understand that, the tasks that an ESB does in an ESB based SOA implementation, don’t simply disappear when you switch to Microservices Architecture.</description>
    </item>
    
    <item>
      <title>Service mesh — 一种新的模式而不是新技术</title>
      <link>https://idevz.github.io/2013/11/service-mesh-%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%A8%A1%E5%BC%8F%E8%80%8C%E4%B8%8D%E6%98%AF%E6%96%B0%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Wed, 13 Nov 2013 22:11:56 +0800</pubDate>
      
      <guid>https://idevz.github.io/2013/11/service-mesh-%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%A8%A1%E5%BC%8F%E8%80%8C%E4%B8%8D%E6%98%AF%E6%96%B0%E6%8A%80%E6%9C%AF/</guid>
      <description>原著信息： How to Make Your Open Source Project Really Awesome
by:Clojure Werkz
https://www.iteye.com/news/27656</description>
    </item>
    
  </channel>
</rss>