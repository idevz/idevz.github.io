<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>请求内变量共享 on 做一个善于思考的学习者</title>
    <link>http://idevz.github.io/tags/%E8%AF%B7%E6%B1%82%E5%86%85%E5%8F%98%E9%87%8F%E5%85%B1%E4%BA%AB/</link>
    <description>Recent content in 请求内变量共享 on 做一个善于思考的学习者</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>© 2020 idevz.org</copyright>
    <lastBuildDate>Wed, 12 Jul 2017 14:55:29 +0800</lastBuildDate>
    
	<atom:link href="http://idevz.github.io/tags/%E8%AF%B7%E6%B1%82%E5%86%85%E5%8F%98%E9%87%8F%E5%85%B1%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ngx ctx bug</title>
      <link>http://idevz.github.io/2017/07/ngx-ctx-bug/</link>
      <pubDate>Wed, 12 Jul 2017 14:55:29 +0800</pubDate>
      
      <guid>http://idevz.github.io/2017/07/ngx-ctx-bug/</guid>
      <description>复现 在 &amp;ldquo;init_worker_by_lua&amp;rdquo; 阶段定义方法 init_vanilla，在 content_by_lua 阶段来调用，使用 local registry = debug.getregistry(); print_r(registry.ngx_lua_ctx_tables) 查看当前存储的所有 key，发现前后两个请求的数据会同时保存在 ngx.ctx 中，按理说 ngx.ctx 表就是用来共享请求内变量的，应该是每个请求有自己的一份，为什么在一个请求中能获取到其他请求的 ngx.ctx ？这个需要细节了解下 ngx.ctx 的实现机制，再回来解析这个问题。
init_vanilla 函数的实现
init_vanilla = function (ngx) Registry.namespace = ngx_var.APP_NAME local REQ_Registry = require(&amp;#39;registry&amp;#39;):new() REQ_Registry[&amp;#39;REQ_URI&amp;#39;] = ngx_var.uri REQ_Registry[&amp;#39;REQ_ARGS&amp;#39;] = ngx_var.args REQ_Registry[&amp;#39;REQ_ARGS_ARR&amp;#39;] = ngx_req.get_uri_args() REQ_Registry[&amp;#39;REQ_HEADERS&amp;#39;] = ngx_req.get_headers() REQ_Registry[&amp;#39;APP_CACHE_PURGE&amp;#39;] = REQ_Registry[&amp;#39;REQ_ARGS_ARR&amp;#39;][&amp;#39;vapurge&amp;#39;] ngx.ctx.REQ_Registry = REQ_Registry if Registry[&amp;#39;VANILLA_INIT&amp;#39;] then return end Registry[&amp;#39;VA_ENV&amp;#39;] = ngx_var.VA_ENV Registry[&amp;#39;APP_NAME&amp;#39;] = Registry.namespace Registry[&amp;#39;APP_ROOT&amp;#39;] = ngx_var.document_root Registry[&amp;#39;APP_HOST&amp;#39;] = ngx_var.</description>
    </item>
    
  </channel>
</rss>