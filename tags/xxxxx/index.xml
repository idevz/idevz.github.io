<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xxxxx on 做一个善于思考的学习者</title>
    <link>https://idevz.org/tags/xxxxx/</link>
    <description>Recent content in xxxxx on 做一个善于思考的学习者</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>© 2020 idevz.org</copyright>
    <lastBuildDate>Mon, 11 Dec 2017 11:33:38 +0800</lastBuildDate>
    
	<atom:link href="https://idevz.org/tags/xxxxx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rust 开发环境</title>
      <link>https://idevz.org/2017/12/rust-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Mon, 11 Dec 2017 11:33:38 +0800</pubDate>
      
      <guid>https://idevz.org/2017/12/rust-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>这里记录下 Rust 开发环境的搭建过程，主要是 Rustup 和 Cargo 的安装。
Rustup 是 Rust 安装器和版本管理工具，而 Cargo 是 Rust 的构建工具和包管理器。
Rust 有各种平台支持，和快速版本迭代机制，因而不同时期存在大量不同的 Rust 构建版本。 Rustup 用于管理不同平台下的 Rust 构建版本并使其互相兼容， 支持安装由 Beta 和 Nightly 频道发布的版本， 并支持其他用于交叉编译的编译版本。
curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh 这条命令将下载并安装 Rust 的官方编译器以及他的包管理工具 Cargo。 cargo、rustc、rustup 和其它命令将会被添加到 Cargo 位于 $HOME/.cargo/bin 的 bin 目录下。 这个路径可以通过 CARGO_HOME 环境变量来修改。
Rustup 元数据和工具链将被安装到 Rustup 位于 $HOME/.rustup 的家目录下。该路径可以通过 RUNSTUP_HOME 环境变量来修改。
可以通过运行 rustup update 来升级 Rust。也可以通过运行 rustup self uninstall 命令来卸载 Rust 及其各种组件、 工具链，之前所有的更改都将被恢复。以下是安装结果：</description>
    </item>
    
  </channel>
</rss>