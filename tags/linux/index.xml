<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on 做一个善于思考的学习者</title>
    <link>https://idevz.org/tags/linux/</link>
    <description>Recent content in linux on 做一个善于思考的学习者</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>© 2020 idevz.org</copyright>
    <lastBuildDate>Fri, 25 Oct 2019 15:34:57 +0800</lastBuildDate>
    
	<atom:link href="https://idevz.org/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shell&#39;s Set X and Function Return</title>
      <link>https://idevz.org/2019/10/shells-set-x-and-function-return/</link>
      <pubDate>Fri, 25 Oct 2019 15:34:57 +0800</pubDate>
      
      <guid>https://idevz.org/2019/10/shells-set-x-and-function-return/</guid>
      <description>日常难免会有些 shell 脚本编写的事情，众所周知这事儿门槛很低，再不济把要执行的命令挨排垒进去也可以作为 一个自动化脚本，但有些复杂的功能或者考虑到代码的复用就需要分些模块、封装些函数了。如何更优雅的 处理函数的返回值便成为一个比较有意思的问题。
shell 脚本没什么特别的技法可言，更多的只能是靠逐步积累。这次在编写 [Lego][lego] 项目命令检查函数时， 需要获取一个返回值，我期待这个返回值不仅仅表达成功与否这个 2 元的结果。但我自己又习惯 在每个脚本前面都加上 set -e 选项，它的意义在于：如果命令失败（即返回一个非零的退出状态），那么脚本将退出。
避免非零值的返回导致整个程序退出的唯一方法就是将其与 &amp;amp;&amp;amp; 或 || 命令放到一起。下面给出一个示例：
call_some_function &amp;#34;${args}&amp;#34; || ret=$? if [ &amp;#34;${ret}&amp;#34; = &amp;#39;false&amp;#39; ]; then echo &amp;#34;vvvvvxxx&amp;#34; fi 这里对 Linux 或者 Unix 系统标准的错误码（返回码）做一个简单的梳理：
   Exit Code Number Meaning Example Comments     0 命令成功完成 exit 0 当命令正确完成、返回或者退出的时候，返回码为 0   1 通常的未知错误 / Catchall for general errors let &amp;ldquo;var1 = 1&amp;frasl;0&amp;rdquo; Miscellaneous errors, such as &amp;ldquo;divide by zero&amp;rdquo; and other impermissible operations   2 误用shell命令 / Misuse of shell builtins (according to Bash documentation) empty_function() {} Missing keyword or command, or permission problem (and diff return code on a failed   126 命令无法执行 / Command invoked cannot execute /dev/null Permission problem or command is not an executable   127 没有找到命令 / &amp;ldquo;command not found&amp;rdquo; illegal_command Possible problem with $PATH or a typo   128 无效的退出参数 / Invalid argument to exit exit 3.</description>
    </item>
    
  </channel>
</rss>